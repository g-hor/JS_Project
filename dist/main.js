/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/map.js */ \"./src/scripts/map.js\");\n// import Example from \"./scripts/example.js\"; // syntax to import our class file\n// import { renderMap } from \"./scripts/map.js\";\n// import { calculate } from \"./scripts/calculation.js\";\n\nconst ANY_ILLNESS = [\"#4B4F40\", \"#89896C\", \"#B7B7A4\", \"#FFE8D6\", \"#C5906D\", \"#AF6B46\"];\nconst DEPRESSION = [\"#432853\", \"#7A002F\", \"#FFAFCC\", \"#BDE0FE\", \"#005FB8\", \"#002A52\"];\nconst SRS_ILLNESS = [\"#832124\", \"#8C545F\", \"#FFBEAD\", \"#B392AC\", \"#735D78\", \"#4C404F\"];\nconst SUBSTANCE_USE = [\"#261042\", \"#682D8B\", \"#B298DC\", \"#B8D0EB\", \"#0CACA6\", \"#075F5D\"];\nconst WEED_USE = [\"#0B460B\", \"#3D6D37\", \"#C0DDA6\", \"#F1F6B6\", \"#6E8745\", \"#4C5D32\"];\nconst PAIN_RELIEF = [\"#112D2D\", \"#4E554E\", \"#E7D8C9\", \"#E6BEAE\", \"#8D6E53\", \"#403326\"];\nconst ALCOHOL = [\"#20163B\", \"#4C4474\", \"#B5A1CE\", \"#DFCBE2\", \"#923A6A\", \"#3A172B\"];\nconst RECEIVED_SERV = [\"#5E3C1D\", \"#AC7035\", \"#FAEDCD\", \"#FCEF9C\", \"#717A29\", \"#48512A\"];\nconst THOUGHTS = [\"#202231\", \"#4C586B\", \"#D9E4E8\", \"#F46778\", \"#8C031A\", \"#490914\"];\nconst PLANS = [\"#2F3733\", \"#455E4F\", \"#FFD5C2\", \"#FFADBC\", \"#901326\", \"#5C474D\"];\nconst ATTEMPTED = ['#191D24', '#352A3C', '#EFD3D7', '#ADB8FF', '#000A52', '#000529'];\nconst COCAINE = [\"#535E1D\", \"#EEEBAA\", \"#DFEBD6\", \"#F19C79\", \"#843D33\", \"#542C27\"];\nconst METH = ['#2F2B22', '#6A604D', '#C5C3BE', '#F4AC90', '#CD4813', '#5D1F09'];\nconst NOT_RECEIVING = ['#3D4051', '#536379', '#9DBEB9', '#B2C9AB', '#859051', '#8C772B'];\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const userModal = document.getElementById('user-modal');\n  const closeUser = document.querySelector('.close');\n  const closeData = document.querySelectorAll('.close')[1];\n  const closeState = document.querySelectorAll('.close')[2];\n  const stateDetails = document.getElementById('state-details');\n  const countContainer = document.getElementById('count-details');\n  const centContainer = document.getElementById('percent-details');\n  const questionIcon = document.querySelector('.fa-circle-question');\n  const infoIcon = document.querySelector('.fa-circle-info');\n  const dataModal = document.getElementById('data-modal');\n\n  // closes instructions modal upon clicking close\n  closeUser.addEventListener('click', function () {\n    userModal.classList.add('hidden');\n  });\n  closeData.addEventListener('click', function () {\n    dataModal.classList.add('hidden');\n  });\n\n  // closes state details modal upon clicking close\n  closeState.addEventListener('click', function () {\n    stateDetails.classList.add('hidden');\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n  });\n  questionIcon.addEventListener('click', function () {\n    userModal.classList.remove('hidden');\n  });\n  infoIcon.addEventListener('click', function () {\n    dataModal.classList.remove('hidden');\n  });\n\n  // closes instructions modal upon clicking anywhere\n  window.addEventListener('click', function (event) {\n    if (event.target == userModal) {\n      userModal.classList.add('hidden');\n    }\n    if (event.target == dataModal) {\n      dataModal.classList.add('hidden');\n    }\n  });\n  (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table27.csv\", \"NSDUH_percentages/table27.csv\", ANY_ILLNESS);\n  document.getElementById(\"table27\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Any Mental Illness in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table27.csv\", \"NSDUH_percentages/table27.csv\", ANY_ILLNESS);\n  });\n  document.getElementById(\"table28\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Serious Mental Illness in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table28.csv\", \"NSDUH_percentages/table28.csv\", SRS_ILLNESS);\n  });\n  document.getElementById(\"table29\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Received Mental Health Services in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table29.csv\", \"NSDUH_percentages/table29.csv\", RECEIVED_SERV);\n  });\n  document.getElementById(\"table30\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Major Depressive Episode in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table30.csv\", \"NSDUH_percentages/table30.csv\", DEPRESSION);\n  });\n  document.getElementById(\"table31\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Had Serious Thoughts of Suicide in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table31.csv\", \"NSDUH_percentages/table31.csv\", THOUGHTS);\n  });\n  document.getElementById(\"table32\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Made Any Suicide Plans in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table32.csv\", \"NSDUH_percentages/table32.csv\", PLANS);\n  });\n  document.getElementById(\"table33\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Attempted Suicide in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table33.csv\", \"NSDUH_percentages/table33.csv\", ATTEMPTED);\n  });\n  document.getElementById(\"table7\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Cocaine Use in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table7.csv\", \"NSDUH_percentages/table7.csv\", COCAINE);\n  });\n  document.getElementById(\"table11\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Methamphetamine Use in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table11.csv\", \"NSDUH_percentages/table11.csv\", METH);\n  });\n  document.getElementById(\"table12\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Pain Reliever Misuse in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table12.csv\", \"NSDUH_percentages/table12.csv\", PAIN_RELIEF);\n  });\n  document.getElementById(\"table22\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Alcohol Use Disorder in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table22.csv\", \"NSDUH_percentages/table22.csv\", ALCOHOL);\n  });\n  document.getElementById(\"table2\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Marijuana Use in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table2.csv\", \"NSDUH_percentages/table2.csv\", WEED_USE);\n  });\n  document.getElementById(\"table23\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Substance Use Disorder in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table23.csv\", \"NSDUH_percentages/table23.csv\", SUBSTANCE_USE);\n  });\n  document.getElementById(\"table26\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Needing But Not Receiving Treatment at a Specialty Facility for Substance Use in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table26.csv\", \"NSDUH_percentages/table26.csv\", NOT_RECEIVING);\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhdGVfc3RhdHMvLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgRXhhbXBsZSBmcm9tIFwiLi9zY3JpcHRzL2V4YW1wbGUuanNcIjsgLy8gc3ludGF4IHRvIGltcG9ydCBvdXIgY2xhc3MgZmlsZVxuLy8gaW1wb3J0IHsgcmVuZGVyTWFwIH0gZnJvbSBcIi4vc2NyaXB0cy9tYXAuanNcIjtcbi8vIGltcG9ydCB7IGNhbGN1bGF0ZSB9IGZyb20gXCIuL3NjcmlwdHMvY2FsY3VsYXRpb24uanNcIjtcbmltcG9ydCB7IGZldGNoQW5kUmVuZGVyIH0gZnJvbSBcIi4vc2NyaXB0cy9tYXAuanNcIjtcblxuY29uc3QgQU5ZX0lMTE5FU1MgPSBbXCIjNEI0RjQwXCIsIFwiIzg5ODk2Q1wiLCBcIiNCN0I3QTRcIiwgXCIjRkZFOEQ2XCIsIFwiI0M1OTA2RFwiLCBcIiNBRjZCNDZcIl07XG5jb25zdCBERVBSRVNTSU9OID0gW1wiIzQzMjg1M1wiLCBcIiM3QTAwMkZcIiwgXCIjRkZBRkNDXCIsIFwiI0JERTBGRVwiLCBcIiMwMDVGQjhcIiwgXCIjMDAyQTUyXCJdO1xuY29uc3QgU1JTX0lMTE5FU1MgPSBbXCIjODMyMTI0XCIsIFwiIzhDNTQ1RlwiLCBcIiNGRkJFQURcIiwgXCIjQjM5MkFDXCIsIFwiIzczNUQ3OFwiLCBcIiM0QzQwNEZcIl07XG5jb25zdCBTVUJTVEFOQ0VfVVNFID0gW1wiIzI2MTA0MlwiLCBcIiM2ODJEOEJcIiwgXCIjQjI5OERDXCIsIFwiI0I4RDBFQlwiLCBcIiMwQ0FDQTZcIiwgXCIjMDc1RjVEXCJdO1xuY29uc3QgV0VFRF9VU0UgPSBbXCIjMEI0NjBCXCIsIFwiIzNENkQzN1wiLCBcIiNDMEREQTZcIiwgXCIjRjFGNkI2XCIsIFwiIzZFODc0NVwiLCBcIiM0QzVEMzJcIl07XG5jb25zdCBQQUlOX1JFTElFRiA9IFtcIiMxMTJEMkRcIiwgXCIjNEU1NTRFXCIsIFwiI0U3RDhDOVwiLCBcIiNFNkJFQUVcIiwgXCIjOEQ2RTUzXCIsIFwiIzQwMzMyNlwiXTtcbmNvbnN0IEFMQ09IT0wgPSBbXCIjMjAxNjNCXCIsIFwiIzRDNDQ3NFwiLCBcIiNCNUExQ0VcIiwgXCIjREZDQkUyXCIsIFwiIzkyM0E2QVwiLCBcIiMzQTE3MkJcIl07XG5jb25zdCBSRUNFSVZFRF9TRVJWID0gW1wiIzVFM0MxRFwiLCBcIiNBQzcwMzVcIiwgXCIjRkFFRENEXCIsIFwiI0ZDRUY5Q1wiLCBcIiM3MTdBMjlcIiwgXCIjNDg1MTJBXCJdO1xuY29uc3QgVEhPVUdIVFMgPSBbXCIjMjAyMjMxXCIsIFwiIzRDNTg2QlwiLCBcIiNEOUU0RThcIiwgXCIjRjQ2Nzc4XCIsIFwiIzhDMDMxQVwiLCBcIiM0OTA5MTRcIl07XG5jb25zdCBQTEFOUyA9IFtcIiMyRjM3MzNcIiwgXCIjNDU1RTRGXCIsIFwiI0ZGRDVDMlwiLCBcIiNGRkFEQkNcIiwgXCIjOTAxMzI2XCIsIFwiIzVDNDc0RFwiXTtcbmNvbnN0IEFUVEVNUFRFRCA9IFsnIzE5MUQyNCcsICcjMzUyQTNDJywgJyNFRkQzRDcnLCAnI0FEQjhGRicsICcjMDAwQTUyJywgJyMwMDA1MjknXTtcbmNvbnN0IENPQ0FJTkUgPSBbXCIjNTM1RTFEXCIsIFwiI0VFRUJBQVwiLCBcIiNERkVCRDZcIiwgXCIjRjE5Qzc5XCIsIFwiIzg0M0QzM1wiLCBcIiM1NDJDMjdcIl07XG5jb25zdCBNRVRIID0gWycjMkYyQjIyJywgJyM2QTYwNEQnLCAnI0M1QzNCRScsICcjRjRBQzkwJywgJyNDRDQ4MTMnLCAnIzVEMUYwOSddO1xuY29uc3QgTk9UX1JFQ0VJVklORyA9IFsnIzNENDA1MScsICcjNTM2Mzc5JywgJyM5REJFQjknLCAnI0IyQzlBQicsICcjODU5MDUxJywgJyM4Qzc3MkInXVxuXG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsICgpID0+IHtcblxuICBjb25zdCB1c2VyTW9kYWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndXNlci1tb2RhbCcpO1xuICBjb25zdCBjbG9zZVVzZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2xvc2UnKTtcbiAgY29uc3QgY2xvc2VEYXRhID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNsb3NlJylbMV07XG4gIGNvbnN0IGNsb3NlU3RhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuY2xvc2UnKVsyXTtcbiAgY29uc3Qgc3RhdGVEZXRhaWxzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N0YXRlLWRldGFpbHMnKTtcbiAgY29uc3QgY291bnRDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY291bnQtZGV0YWlscycpO1xuICBjb25zdCBjZW50Q29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BlcmNlbnQtZGV0YWlscycpO1xuICBjb25zdCBxdWVzdGlvbkljb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZmEtY2lyY2xlLXF1ZXN0aW9uJyk7XG4gIGNvbnN0IGluZm9JY29uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZhLWNpcmNsZS1pbmZvJyk7XG4gIGNvbnN0IGRhdGFNb2RhbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkYXRhLW1vZGFsJyk7XG5cbiAgXG4gIC8vIGNsb3NlcyBpbnN0cnVjdGlvbnMgbW9kYWwgdXBvbiBjbGlja2luZyBjbG9zZVxuICBjbG9zZVVzZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgICB1c2VyTW9kYWwuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XG4gIH0pO1xuXG4gIGNsb3NlRGF0YS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgIGRhdGFNb2RhbC5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbiAgfSk7XG5cbiAgLy8gY2xvc2VzIHN0YXRlIGRldGFpbHMgbW9kYWwgdXBvbiBjbGlja2luZyBjbG9zZVxuICBjbG9zZVN0YXRlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgc3RhdGVEZXRhaWxzLmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpXG4gICAgY291bnRDb250YWluZXIuaW5uZXJIVE1MID0gJyc7XG4gICAgY2VudENvbnRhaW5lci5pbm5lckhUTUwgPSAnJztcbiAgfSk7XG5cbiAgcXVlc3Rpb25JY29uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgdXNlck1vZGFsLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xuICB9KTtcblxuICBpbmZvSWNvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgIGRhdGFNb2RhbC5jbGFzc0xpc3QucmVtb3ZlKCdoaWRkZW4nKTtcbiAgfSk7XG5cbiAgLy8gY2xvc2VzIGluc3RydWN0aW9ucyBtb2RhbCB1cG9uIGNsaWNraW5nIGFueXdoZXJlXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgaWYgKGV2ZW50LnRhcmdldCA9PSB1c2VyTW9kYWwpIHtcbiAgICAgIHVzZXJNb2RhbC5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbiAgICB9XG4gICAgaWYgKGV2ZW50LnRhcmdldCA9PSBkYXRhTW9kYWwpIHtcbiAgICAgIGRhdGFNb2RhbC5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbiAgICB9XG4gIH0pO1xuXG5cblxuICBmZXRjaEFuZFJlbmRlcihcIk5TRFVIX2NvdW50L3RhYmxlMjcuY3N2XCIsIFwiTlNEVUhfcGVyY2VudGFnZXMvdGFibGUyNy5jc3ZcIiwgQU5ZX0lMTE5FU1MpO1xuXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGFibGUyN1wiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIGNvdW50Q29udGFpbmVyLmlubmVySFRNTCA9ICcnO1xuICAgIGNlbnRDb250YWluZXIuaW5uZXJIVE1MID0gJyc7XG4gICAgc3RhdGVEZXRhaWxzLmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudXMtbWFwXCIpLmlubmVySFRNTCA9IFwiXCI7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5sZWdlbmRcIikuaW5uZXJIVE1MID0gXCJcIjtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiaDJcIikuaW5uZXJIVE1MID0gXCJBbnkgTWVudGFsIElsbG5lc3MgaW4gdGhlIFBhc3QgWWVhclwiO1xuICAgIGZldGNoQW5kUmVuZGVyKFwiTlNEVUhfY291bnQvdGFibGUyNy5jc3ZcIiwgXCJOU0RVSF9wZXJjZW50YWdlcy90YWJsZTI3LmNzdlwiLCBBTllfSUxMTkVTUyk7XG4gIH0pXG5cbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0YWJsZTI4XCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgY291bnRDb250YWluZXIuaW5uZXJIVE1MID0gJyc7XG4gICAgY2VudENvbnRhaW5lci5pbm5lckhUTUwgPSAnJztcbiAgICBzdGF0ZURldGFpbHMuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi51cy1tYXBcIikuaW5uZXJIVE1MID0gXCJcIjtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmxlZ2VuZFwiKS5pbm5lckhUTUwgPSBcIlwiO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJoMlwiKS5pbm5lckhUTUwgPSBcIlNlcmlvdXMgTWVudGFsIElsbG5lc3MgaW4gdGhlIFBhc3QgWWVhclwiO1xuXG4gICAgZmV0Y2hBbmRSZW5kZXIoXCJOU0RVSF9jb3VudC90YWJsZTI4LmNzdlwiLCBcIk5TRFVIX3BlcmNlbnRhZ2VzL3RhYmxlMjguY3N2XCIsIFNSU19JTExORVNTKTtcbiAgfSlcblxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRhYmxlMjlcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBjb3VudENvbnRhaW5lci5pbm5lckhUTUwgPSAnJztcbiAgICBjZW50Q29udGFpbmVyLmlubmVySFRNTCA9ICcnO1xuICAgIHN0YXRlRGV0YWlscy5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnVzLW1hcFwiKS5pbm5lckhUTUwgPSBcIlwiO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubGVnZW5kXCIpLmlubmVySFRNTCA9IFwiXCI7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImgyXCIpLmlubmVySFRNTCA9IFwiUmVjZWl2ZWQgTWVudGFsIEhlYWx0aCBTZXJ2aWNlcyBpbiB0aGUgUGFzdCBZZWFyXCI7XG5cbiAgICBmZXRjaEFuZFJlbmRlcihcIk5TRFVIX2NvdW50L3RhYmxlMjkuY3N2XCIsIFwiTlNEVUhfcGVyY2VudGFnZXMvdGFibGUyOS5jc3ZcIiwgUkVDRUlWRURfU0VSVik7XG4gIH0pXG5cbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0YWJsZTMwXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgY291bnRDb250YWluZXIuaW5uZXJIVE1MID0gJyc7XG4gICAgY2VudENvbnRhaW5lci5pbm5lckhUTUwgPSAnJztcbiAgICBzdGF0ZURldGFpbHMuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi51cy1tYXBcIikuaW5uZXJIVE1MID0gXCJcIjtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmxlZ2VuZFwiKS5pbm5lckhUTUwgPSBcIlwiO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJoMlwiKS5pbm5lckhUTUwgPSBcIk1ham9yIERlcHJlc3NpdmUgRXBpc29kZSBpbiB0aGUgUGFzdCBZZWFyXCI7XG5cbiAgICBmZXRjaEFuZFJlbmRlcihcIk5TRFVIX2NvdW50L3RhYmxlMzAuY3N2XCIsIFwiTlNEVUhfcGVyY2VudGFnZXMvdGFibGUzMC5jc3ZcIiwgREVQUkVTU0lPTik7XG4gIH0pXG5cbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0YWJsZTMxXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgY291bnRDb250YWluZXIuaW5uZXJIVE1MID0gJyc7XG4gICAgY2VudENvbnRhaW5lci5pbm5lckhUTUwgPSAnJztcbiAgICBzdGF0ZURldGFpbHMuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi51cy1tYXBcIikuaW5uZXJIVE1MID0gXCJcIjtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmxlZ2VuZFwiKS5pbm5lckhUTUwgPSBcIlwiO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJoMlwiKS5pbm5lckhUTUwgPSBcIkhhZCBTZXJpb3VzIFRob3VnaHRzIG9mIFN1aWNpZGUgaW4gdGhlIFBhc3QgWWVhclwiO1xuXG4gICAgZmV0Y2hBbmRSZW5kZXIoXCJOU0RVSF9jb3VudC90YWJsZTMxLmNzdlwiLCBcIk5TRFVIX3BlcmNlbnRhZ2VzL3RhYmxlMzEuY3N2XCIsIFRIT1VHSFRTKTtcbiAgfSlcblxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRhYmxlMzJcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBjb3VudENvbnRhaW5lci5pbm5lckhUTUwgPSAnJztcbiAgICBjZW50Q29udGFpbmVyLmlubmVySFRNTCA9ICcnO1xuICAgIHN0YXRlRGV0YWlscy5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnVzLW1hcFwiKS5pbm5lckhUTUwgPSBcIlwiO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubGVnZW5kXCIpLmlubmVySFRNTCA9IFwiXCI7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImgyXCIpLmlubmVySFRNTCA9IFwiTWFkZSBBbnkgU3VpY2lkZSBQbGFucyBpbiB0aGUgUGFzdCBZZWFyXCI7XG5cbiAgICBmZXRjaEFuZFJlbmRlcihcIk5TRFVIX2NvdW50L3RhYmxlMzIuY3N2XCIsIFwiTlNEVUhfcGVyY2VudGFnZXMvdGFibGUzMi5jc3ZcIiwgUExBTlMpO1xuICB9KVxuXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGFibGUzM1wiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIGNvdW50Q29udGFpbmVyLmlubmVySFRNTCA9ICcnO1xuICAgIGNlbnRDb250YWluZXIuaW5uZXJIVE1MID0gJyc7XG4gICAgc3RhdGVEZXRhaWxzLmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudXMtbWFwXCIpLmlubmVySFRNTCA9IFwiXCI7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5sZWdlbmRcIikuaW5uZXJIVE1MID0gXCJcIjtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiaDJcIikuaW5uZXJIVE1MID0gXCJBdHRlbXB0ZWQgU3VpY2lkZSBpbiB0aGUgUGFzdCBZZWFyXCI7XG5cbiAgICBmZXRjaEFuZFJlbmRlcihcIk5TRFVIX2NvdW50L3RhYmxlMzMuY3N2XCIsIFwiTlNEVUhfcGVyY2VudGFnZXMvdGFibGUzMy5jc3ZcIiwgQVRURU1QVEVEKTtcbiAgfSlcblxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRhYmxlN1wiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIGNvdW50Q29udGFpbmVyLmlubmVySFRNTCA9ICcnO1xuICAgIGNlbnRDb250YWluZXIuaW5uZXJIVE1MID0gJyc7XG4gICAgc3RhdGVEZXRhaWxzLmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudXMtbWFwXCIpLmlubmVySFRNTCA9IFwiXCI7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5sZWdlbmRcIikuaW5uZXJIVE1MID0gXCJcIjtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiaDJcIikuaW5uZXJIVE1MID0gXCJDb2NhaW5lIFVzZSBpbiB0aGUgUGFzdCBZZWFyXCI7XG5cbiAgICBmZXRjaEFuZFJlbmRlcihcIk5TRFVIX2NvdW50L3RhYmxlNy5jc3ZcIiwgXCJOU0RVSF9wZXJjZW50YWdlcy90YWJsZTcuY3N2XCIsIENPQ0FJTkUpO1xuICB9KVxuXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGFibGUxMVwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIGNvdW50Q29udGFpbmVyLmlubmVySFRNTCA9ICcnO1xuICAgIGNlbnRDb250YWluZXIuaW5uZXJIVE1MID0gJyc7XG4gICAgc3RhdGVEZXRhaWxzLmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudXMtbWFwXCIpLmlubmVySFRNTCA9IFwiXCI7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5sZWdlbmRcIikuaW5uZXJIVE1MID0gXCJcIjtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiaDJcIikuaW5uZXJIVE1MID0gXCJNZXRoYW1waGV0YW1pbmUgVXNlIGluIHRoZSBQYXN0IFllYXJcIjtcblxuICAgIGZldGNoQW5kUmVuZGVyKFwiTlNEVUhfY291bnQvdGFibGUxMS5jc3ZcIiwgXCJOU0RVSF9wZXJjZW50YWdlcy90YWJsZTExLmNzdlwiLCBNRVRIKTtcbiAgfSlcblxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRhYmxlMTJcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBjb3VudENvbnRhaW5lci5pbm5lckhUTUwgPSAnJztcbiAgICBjZW50Q29udGFpbmVyLmlubmVySFRNTCA9ICcnO1xuICAgIHN0YXRlRGV0YWlscy5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnVzLW1hcFwiKS5pbm5lckhUTUwgPSBcIlwiO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubGVnZW5kXCIpLmlubmVySFRNTCA9IFwiXCI7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImgyXCIpLmlubmVySFRNTCA9IFwiUGFpbiBSZWxpZXZlciBNaXN1c2UgaW4gdGhlIFBhc3QgWWVhclwiO1xuXG4gICAgZmV0Y2hBbmRSZW5kZXIoXCJOU0RVSF9jb3VudC90YWJsZTEyLmNzdlwiLCBcIk5TRFVIX3BlcmNlbnRhZ2VzL3RhYmxlMTIuY3N2XCIsIFBBSU5fUkVMSUVGKTtcbiAgfSlcblxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRhYmxlMjJcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBjb3VudENvbnRhaW5lci5pbm5lckhUTUwgPSAnJztcbiAgICBjZW50Q29udGFpbmVyLmlubmVySFRNTCA9ICcnO1xuICAgIHN0YXRlRGV0YWlscy5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnVzLW1hcFwiKS5pbm5lckhUTUwgPSBcIlwiO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubGVnZW5kXCIpLmlubmVySFRNTCA9IFwiXCI7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImgyXCIpLmlubmVySFRNTCA9IFwiQWxjb2hvbCBVc2UgRGlzb3JkZXIgaW4gdGhlIFBhc3QgWWVhclwiO1xuXG4gICAgZmV0Y2hBbmRSZW5kZXIoXCJOU0RVSF9jb3VudC90YWJsZTIyLmNzdlwiLCBcIk5TRFVIX3BlcmNlbnRhZ2VzL3RhYmxlMjIuY3N2XCIsIEFMQ09IT0wpO1xuICB9KVxuICBcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0YWJsZTJcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBjb3VudENvbnRhaW5lci5pbm5lckhUTUwgPSAnJztcbiAgICBjZW50Q29udGFpbmVyLmlubmVySFRNTCA9ICcnO1xuICAgIHN0YXRlRGV0YWlscy5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnVzLW1hcFwiKS5pbm5lckhUTUwgPSBcIlwiO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubGVnZW5kXCIpLmlubmVySFRNTCA9IFwiXCI7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImgyXCIpLmlubmVySFRNTCA9IFwiTWFyaWp1YW5hIFVzZSBpbiB0aGUgUGFzdCBZZWFyXCI7XG5cbiAgICBmZXRjaEFuZFJlbmRlcihcIk5TRFVIX2NvdW50L3RhYmxlMi5jc3ZcIiwgXCJOU0RVSF9wZXJjZW50YWdlcy90YWJsZTIuY3N2XCIsIFdFRURfVVNFKTtcbiAgfSlcblxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRhYmxlMjNcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBjb3VudENvbnRhaW5lci5pbm5lckhUTUwgPSAnJztcbiAgICBjZW50Q29udGFpbmVyLmlubmVySFRNTCA9ICcnO1xuICAgIHN0YXRlRGV0YWlscy5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnVzLW1hcFwiKS5pbm5lckhUTUwgPSBcIlwiO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubGVnZW5kXCIpLmlubmVySFRNTCA9IFwiXCI7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImgyXCIpLmlubmVySFRNTCA9IFwiU3Vic3RhbmNlIFVzZSBEaXNvcmRlciBpbiB0aGUgUGFzdCBZZWFyXCI7XG5cbiAgICBmZXRjaEFuZFJlbmRlcihcIk5TRFVIX2NvdW50L3RhYmxlMjMuY3N2XCIsIFwiTlNEVUhfcGVyY2VudGFnZXMvdGFibGUyMy5jc3ZcIiwgU1VCU1RBTkNFX1VTRSk7XG4gIH0pXG5cbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0YWJsZTI2XCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgY291bnRDb250YWluZXIuaW5uZXJIVE1MID0gJyc7XG4gICAgY2VudENvbnRhaW5lci5pbm5lckhUTUwgPSAnJztcbiAgICBzdGF0ZURldGFpbHMuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi51cy1tYXBcIikuaW5uZXJIVE1MID0gXCJcIjtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmxlZ2VuZFwiKS5pbm5lckhUTUwgPSBcIlwiO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJoMlwiKS5pbm5lckhUTUwgPSBcIk5lZWRpbmcgQnV0IE5vdCBSZWNlaXZpbmcgVHJlYXRtZW50IGF0IGEgU3BlY2lhbHR5IEZhY2lsaXR5IGZvciBTdWJzdGFuY2UgVXNlIGluIHRoZSBQYXN0IFllYXJcIjtcblxuICAgIGZldGNoQW5kUmVuZGVyKFwiTlNEVUhfY291bnQvdGFibGUyNi5jc3ZcIiwgXCJOU0RVSF9wZXJjZW50YWdlcy90YWJsZTI2LmNzdlwiLCBOT1RfUkVDRUlWSU5HKTtcbiAgfSlcblxufSkiXSwibmFtZXMiOlsiZmV0Y2hBbmRSZW5kZXIiLCJBTllfSUxMTkVTUyIsIkRFUFJFU1NJT04iLCJTUlNfSUxMTkVTUyIsIlNVQlNUQU5DRV9VU0UiLCJXRUVEX1VTRSIsIlBBSU5fUkVMSUVGIiwiQUxDT0hPTCIsIlJFQ0VJVkVEX1NFUlYiLCJUSE9VR0hUUyIsIlBMQU5TIiwiQVRURU1QVEVEIiwiQ09DQUlORSIsIk1FVEgiLCJOT1RfUkVDRUlWSU5HIiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwidXNlck1vZGFsIiwiZ2V0RWxlbWVudEJ5SWQiLCJjbG9zZVVzZXIiLCJxdWVyeVNlbGVjdG9yIiwiY2xvc2VEYXRhIiwicXVlcnlTZWxlY3RvckFsbCIsImNsb3NlU3RhdGUiLCJzdGF0ZURldGFpbHMiLCJjb3VudENvbnRhaW5lciIsImNlbnRDb250YWluZXIiLCJxdWVzdGlvbkljb24iLCJpbmZvSWNvbiIsImRhdGFNb2RhbCIsImNsYXNzTGlzdCIsImFkZCIsImlubmVySFRNTCIsInJlbW92ZSIsIndpbmRvdyIsImV2ZW50IiwidGFyZ2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/data_parsers.js":
/*!*************************************!*\
  !*** ./src/scripts/data_parsers.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"calculateSD\": function() { return /* binding */ calculateSD; },\n/* harmony export */   \"parse\": function() { return /* binding */ parse; }\n/* harmony export */ });\nfunction calculateSD(arr) {\n  const length = arr.length;\n  const avg = arr.reduce((x, y) => x + y) / length;\n  const deviations = arr.map(n => n - avg);\n  const squareDevs = deviations.map(n => Math.pow(n, 2));\n  const variance = squareDevs.reduce((x, y) => x + y) / length;\n  return Math.sqrt(variance);\n}\n\n// removes commas from a stringified number\nfunction parse(numString) {\n  if (numString.includes(',')) {\n    return parseInt(numString.replace(/,/g, ''));\n  } else {\n    return parseInt(numString);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9kYXRhX3BhcnNlcnMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxTQUFTQSxXQUFXQSxDQUFDQyxHQUFHLEVBQUU7RUFDL0IsTUFBTUMsTUFBTSxHQUFHRCxHQUFHLENBQUNDLE1BQU07RUFDekIsTUFBTUMsR0FBRyxHQUFHRixHQUFHLENBQUNHLE1BQU0sQ0FBQyxDQUFDQyxDQUFDLEVBQUVDLENBQUMsS0FBS0QsQ0FBQyxHQUFHQyxDQUFDLENBQUMsR0FBR0osTUFBTTtFQUNoRCxNQUFNSyxVQUFVLEdBQUdOLEdBQUcsQ0FBQ08sR0FBRyxDQUFDQyxDQUFDLElBQUlBLENBQUMsR0FBR04sR0FBRyxDQUFDO0VBQ3hDLE1BQU1PLFVBQVUsR0FBR0gsVUFBVSxDQUFDQyxHQUFHLENBQUNDLENBQUMsSUFBSUUsSUFBSSxDQUFDQyxHQUFHLENBQUNILENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztFQUN0RCxNQUFNSSxRQUFRLEdBQUdILFVBQVUsQ0FBQ04sTUFBTSxDQUFDLENBQUNDLENBQUMsRUFBRUMsQ0FBQyxLQUFLRCxDQUFDLEdBQUdDLENBQUMsQ0FBQyxHQUFHSixNQUFNO0VBQzVELE9BQU9TLElBQUksQ0FBQ0csSUFBSSxDQUFDRCxRQUFRLENBQUM7QUFDNUI7O0FBR0E7QUFDTyxTQUFTRSxLQUFLQSxDQUFDQyxTQUFTLEVBQUU7RUFDL0IsSUFBSUEsU0FBUyxDQUFDQyxRQUFRLENBQUMsR0FBRyxDQUFDLEVBQUU7SUFDM0IsT0FBT0MsUUFBUSxDQUFDRixTQUFTLENBQUNHLE9BQU8sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7RUFDOUMsQ0FBQyxNQUFNO0lBQ0wsT0FBT0QsUUFBUSxDQUFDRixTQUFTLENBQUM7RUFDNUI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YXRlX3N0YXRzLy4vc3JjL3NjcmlwdHMvZGF0YV9wYXJzZXJzLmpzPzlmMTgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGNhbGN1bGF0ZVNEKGFycikge1xuICBjb25zdCBsZW5ndGggPSBhcnIubGVuZ3RoO1xuICBjb25zdCBhdmcgPSBhcnIucmVkdWNlKCh4LCB5KSA9PiB4ICsgeSkgLyBsZW5ndGg7XG4gIGNvbnN0IGRldmlhdGlvbnMgPSBhcnIubWFwKG4gPT4gbiAtIGF2Zyk7XG4gIGNvbnN0IHNxdWFyZURldnMgPSBkZXZpYXRpb25zLm1hcChuID0+IE1hdGgucG93KG4sIDIpKTtcbiAgY29uc3QgdmFyaWFuY2UgPSBzcXVhcmVEZXZzLnJlZHVjZSgoeCwgeSkgPT4geCArIHkpIC8gbGVuZ3RoO1xuICByZXR1cm4gTWF0aC5zcXJ0KHZhcmlhbmNlKTtcbn1cblxuXG4vLyByZW1vdmVzIGNvbW1hcyBmcm9tIGEgc3RyaW5naWZpZWQgbnVtYmVyXG5leHBvcnQgZnVuY3Rpb24gcGFyc2UobnVtU3RyaW5nKSB7XG4gIGlmIChudW1TdHJpbmcuaW5jbHVkZXMoJywnKSkge1xuICAgIHJldHVybiBwYXJzZUludChudW1TdHJpbmcucmVwbGFjZSgvLC9nLCAnJykpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBwYXJzZUludChudW1TdHJpbmcpO1xuICB9XG59XG4iXSwibmFtZXMiOlsiY2FsY3VsYXRlU0QiLCJhcnIiLCJsZW5ndGgiLCJhdmciLCJyZWR1Y2UiLCJ4IiwieSIsImRldmlhdGlvbnMiLCJtYXAiLCJuIiwic3F1YXJlRGV2cyIsIk1hdGgiLCJwb3ciLCJ2YXJpYW5jZSIsInNxcnQiLCJwYXJzZSIsIm51bVN0cmluZyIsImluY2x1ZGVzIiwicGFyc2VJbnQiLCJyZXBsYWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/data_parsers.js\n");

/***/ }),

/***/ "./src/scripts/map.js":
/*!****************************!*\
  !*** ./src/scripts/map.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fetchAndRender\": function() { return /* binding */ fetchAndRender; }\n/* harmony export */ });\n/* harmony import */ var _data_parsers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data_parsers */ \"./src/scripts/data_parsers.js\");\n\nfunction fetchAndRender(url1, url2, colors) {\n  const deviationText = [\"Two or More Standard Deviations (SD) Below National Average (NA)\", \"Between Two and One SD Below NA\", \"Between One SD Below NA and NA\", \"Between One SD Above NA and NA\", \"Between One and Two SD Above NA\", \"Two more More SD Above NA\"];\n  let mapData;\n  let countData;\n  let centData;\n  d3.json(\"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\").then(data => {\n    mapData = data;\n    d3.csv(url1).then(data => {\n      countData = data.map(function (state) {\n        return {\n          \"State\": state[\"State\"],\n          \"12-17 Estimate\": state[\"12-17 Estimate\"],\n          \"18-25 Estimate\": state[\"18-25 Estimate\"],\n          \"12 or Older Estimate\": state[\"12 or Older Estimate\"],\n          \"18 or Older Estimate\": state[\"18 or Older Estimate\"],\n          \"26 or Older Estimate\": state[\"26 or Older Estimate\"]\n        };\n      });\n      renderMap();\n    });\n  });\n  function renderMap() {\n    const width = 950;\n    const height = 520;\n    const path = d3.geoPath(d3.geoAlbersUsa());\n    const svg = d3.select('.us-map').attr('viewBox', [0, 0, width, height]).on(\"click\", reset);\n    const g = svg.append('g');\n\n    // defines how much to zoom in (initialized here to allow access in later callbacks)\n    const zoom = d3.zoom().scaleExtent([1, 8]).on(\"zoom\", zoomed);\n\n    /* uses 'mapData' to create geometric shapes for states\n      applies fill color based on selected data\n      applies 'clicked' callback function to zoom in on selected state\n    */\n    const states = g.append('g').attr('cursor', 'pointer').selectAll('path').data(topojson.feature(mapData, mapData.objects.states).features).enter().append('path').attr('d', path).attr('fill', state => {\n      let stateName = state.properties.name;\n      let stateData = countData.find(ele => {\n        return ele[\"State\"] === stateName;\n      });\n      const nationalAvg = d3.mean(countData.slice(6), ele => (0,_data_parsers__WEBPACK_IMPORTED_MODULE_0__.parse)(ele[\"18 or Older Estimate\"]));\n      const standardDev = (0,_data_parsers__WEBPACK_IMPORTED_MODULE_0__.calculateSD)(d3.map(countData.slice(6), d => (0,_data_parsers__WEBPACK_IMPORTED_MODULE_0__.parse)(d['18 or Older Estimate'])));\n\n      // geographical data and statistical data do not align, this handles instances where no state match is found\n      stateData ||= {\n        \"18 or Older Estimate\": `${nationalAvg}`\n      };\n      const stateAvg = (0,_data_parsers__WEBPACK_IMPORTED_MODULE_0__.parse)(stateData[\"18 or Older Estimate\"]);\n      const minusTwoSD = nationalAvg - 2 * standardDev;\n      const minusOneSD = nationalAvg - 1 * standardDev;\n      const plusOneSD = nationalAvg + 1 * standardDev;\n      const plusTwoSD = nationalAvg + 2 * standardDev;\n      if (stateAvg <= minusTwoSD) {\n        return colors[0];\n      } else if (stateAvg > minusTwoSD && stateAvg <= minusOneSD) {\n        return colors[1];\n      } else if (stateAvg > minusOneSD && stateAvg <= nationalAvg) {\n        return colors[2];\n      } else if (stateAvg > nationalAvg && stateAvg <= plusOneSD) {\n        return colors[3];\n      } else if (stateAvg > plusOneSD && stateAvg <= plusTwoSD) {\n        return colors[4];\n      } else {\n        return colors[5];\n      }\n    }).join('path').on('click', makeModal).attr('d', path);\n\n    // add HTML title element to each state (displays upon hovering)\n    states.append('title').text(state => state.properties.name);\n\n    // adds white state borders\n    g.append('path').attr('fill', 'none').attr('stroke', 'white').attr('stroke-linejoin', 'round').attr('d', path(topojson.mesh(mapData, mapData.objects.states, (a, b) => a !== b)));\n\n    // create color legend\n    const legend = d3.select('.legend');\n    let yAxis = 65;\n\n    // iterate through colors to create colored rectangle + associated text description\n    colors.forEach(function (color, idx) {\n      legend.append('rect').attr('x', '0').attr('y', `${yAxis}`).attr('width', '20').attr('height', '80').attr('fill', `${color}`).attr('id', `color-${idx}`).attr('idx', idx).attr('data-text', `${deviationText[idx]}`);\n      d3.select(`#color-${idx}`).append('text').attr('x', '23').attr('y', `${yAxis}`).attr('width', '200').attr('height', '80').text(`${deviationText[idx]}`);\n      d3.select(`#color-${idx}`).on('mouseover', e => {\n        const el = e.target;\n        const detail = el.dataset.text;\n        const idx = Number(el.getAttribute('idx'));\n        const legendDetail = document.getElementById(\"legend-detail\");\n        const offsetLeft = document.querySelector('.map-container').offsetLeft;\n        const offsetTop = document.querySelector('.map-container').offsetTop;\n        const legendWidth = document.querySelector('.legend').width.baseVal.value;\n        legendDetail.innerText = detail;\n        legendDetail.style.display = \"block\";\n        legendDetail.style.left = `${offsetLeft + legendWidth - 1}px`;\n        legendDetail.style.top = `${offsetTop + 65 + 80 * idx}px`;\n        legendDetail.style.backgroundColor = color;\n        if (idx >= 0 && idx <= 1 || idx >= 4 && idx <= 5) {\n          legendDetail.style.color = 'white';\n        } else {\n          legendDetail.style.color = 'black';\n        }\n      }).on('mouseout', () => {\n        const legendDetail = document.getElementById(\"legend-detail\");\n        legendDetail.style.display = 'none';\n      });\n      yAxis += 80;\n    });\n\n    // zoom in on state when clicked\n    function clicked(event, d) {\n      const [[x0, y0], [x1, y1]] = path.bounds(d);\n      event.stopPropagation();\n      states.transition().style(\"fill\", null);\n      svg.transition().duration(750).call(zoom.transform, d3.zoomIdentity.translate(width / 2, height / 2).scale(Math.min(8, 0.9 / Math.max((x1 - x0) / width, (y1 - y0) / height))).translate(-(x0 + x1) / 2, -(y0 + y1) / 2), d3.pointer(event, svg.node()));\n    }\n    function zoomed(event) {\n      const {\n        transform\n      } = event;\n      g.attr(\"transform\", transform);\n      g.attr(\"stroke-width\", 1 / transform.k);\n    }\n\n    // resets view back to default sizing/position\n    function reset() {\n      const countContainer = document.getElementById('count-details');\n      const centContainer = document.getElementById('percent-details');\n      const stateDetails = document.getElementById('state-details');\n      countContainer.innerHTML = '';\n      centContainer.innerHTML = '';\n      stateDetails.classList.add('hidden');\n      states.transition().style(\"fill\", null);\n      svg.transition().duration(750).call(zoom.transform, d3.zoomIdentity, d3.zoomTransform(svg.node()).invert([width / 2, height / 2]));\n    }\n\n    // makes modal with details for selected state\n    function makeModal(event, state) {\n      event.stopPropagation();\n      const stateDetails = document.getElementById('state-details');\n      const countContainer = document.getElementById('count-details');\n      const centContainer = document.getElementById('percent-details');\n      countContainer.innerHTML = '';\n      centContainer.innerHTML = '';\n      let stateName = state.properties.name;\n      let stateCount = countData.find(ele => {\n        return ele[\"State\"] === stateName;\n      });\n      d3.csv(url2).then(data => {\n        centData = data.map(function (state) {\n          return {\n            \"State\": state[\"State\"],\n            \"12-17 Estimate\": state[\"12-17 Estimate\"],\n            \"18-25 Estimate\": state[\"18-25 Estimate\"],\n            \"12 or Older Estimate\": state[\"12 or Older Estimate\"],\n            \"18 or Older Estimate\": state[\"18 or Older Estimate\"],\n            \"26 or Older Estimate\": state[\"26 or Older Estimate\"]\n          };\n        });\n        let stateCent = centData.find(ele => {\n          return ele[\"State\"] === stateName;\n        });\n        const countHeader = document.createElement('li');\n        countHeader.innerHTML = `Raw count estimations (by age) for ${stateName}:`;\n        countContainer.appendChild(countHeader);\n        const centHeader = document.createElement('li');\n        centHeader.innerHTML = `Percentage estimations (by age) for ${stateName}:`;\n        centContainer.appendChild(centHeader);\n        Object.entries(stateCount).slice(1).forEach(function (pair) {\n          if (pair[1]) {\n            const countPair = document.createElement('li');\n            countPair.innerHTML = `${pair[0]}: ${(0,_data_parsers__WEBPACK_IMPORTED_MODULE_0__.parse)(pair[1]) * 1000} people`;\n            countContainer.appendChild(countPair);\n          }\n        });\n        Object.entries(stateCent).slice(1).forEach(function (pair) {\n          if (pair[1]) {\n            const centPair = document.createElement('li');\n            centPair.innerHTML = `${pair[0]}: ${pair[1]}`;\n            centContainer.appendChild(centPair);\n          }\n        });\n      });\n      stateDetails.classList.remove('hidden');\n      stateDetails.setAttribute('z-index', '5');\n      clicked(event, state);\n    }\n\n    // enables click-dragging the map around inside SVG element\n    svg.call(zoom);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/map.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGF0ZV9zdGF0cy8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;