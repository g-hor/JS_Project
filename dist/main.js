/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/map.js */ \"./src/scripts/map.js\");\n// import Example from \"./scripts/example.js\"; // syntax to import our class file\n// import { renderMap } from \"./scripts/map.js\";\n// import { calculate } from \"./scripts/calculation.js\";\n\nconst ANY_ILLNESS = [\"#4B4F40\", \"#89896C\", \"#B7B7A4\", \"#FFE8D6\", \"#C5906D\", \"#AF6B46\"];\nconst DEPRESSION = [\"#432853\", \"#7A002F\", \"#FFAFCC\", \"#BDE0FE\", \"#005FB8\", \"#002A52\"];\nconst SRS_ILLNESS = [\"#832124\", \"#8C545F\", \"#FFBEAD\", \"#B392AC\", \"#735D78\", \"#4C404F\"];\nconst SUBSTANCE_USE = [\"#261042\", \"#682D8B\", \"#B298DC\", \"#B8D0EB\", \"#0CACA6\", \"#075F5D\"];\nconst WEED_USE = [\"#0B460B\", \"#3D6D37\", \"#C0DDA6\", \"#F1F6B6\", \"#6E8745\", \"#4C5D32\"];\nconst PAIN_RELIEF = [\"#112D2D\", \"#4E554E\", \"#E7D8C9\", \"#E6BEAE\", \"#8D6E53\", \"#403326\"];\nconst ALCOHOL = [\"#20163B\", \"#4C4474\", \"#B5A1CE\", \"#DFCBE2\", \"#923A6A\", \"#3A172B\"];\nconst RECEIVED_SERV = [\"#5E3C1D\", \"#AC7035\", \"#FAEDCD\", \"#FCEF9C\", \"#717A29\", \"#48512A\"];\nconst THOUGHTS = [\"#202231\", \"#4C586B\", \"#D9E4E8\", \"#F46778\", \"#8C031A\", \"#490914\"];\nconst PLANS = [\"#2F3733\", \"#455E4F\", \"#FFD5C2\", \"#FFADBC\", \"#901326\", \"#5C474D\"];\nconst ATTEMPTED = ['#191D24', '#352A3C', '#EFD3D7', '#ADB8FF', '#000A52', '#000529'];\nconst COCAINE = [\"#535E1D\", \"#EEEBAA\", \"#DFEBD6\", \"#F19C79\", \"#843D33\", \"#542C27\"];\nconst METH = ['#2F2B22', '#6A604D', '#C5C3BE', '#F4AC90', '#CD4813', '#5D1F09'];\nconst NOT_RECEIVING = ['#3D4051', '#536379', '#9DBEB9', '#B2C9AB', '#859051', '#8C772B'];\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const userModal = document.getElementById('user-modal');\n  const closeUser = document.querySelector('.close');\n  const closeData = document.querySelectorAll('.close')[1];\n  const closeState = document.querySelectorAll('.close')[2];\n  const stateDetails = document.getElementById('state-details');\n  const countContainer = document.getElementById('count-details');\n  const centContainer = document.getElementById('percent-details');\n  const questionIcon = document.querySelector('.fa-circle-question');\n  const infoIcon = document.querySelector('.fa-circle-info');\n  const dataModal = document.getElementById('data-modal');\n\n  // closes instructions modal upon clicking close\n  closeUser.addEventListener('click', function () {\n    userModal.classList.add('hidden');\n  });\n  closeData.addEventListener('click', function () {\n    dataModal.classList.add('hidden');\n  });\n\n  // closes state details modal upon clicking close\n  closeState.addEventListener('click', function () {\n    stateDetails.classList.add('hidden');\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n  });\n  questionIcon.addEventListener('click', function () {\n    userModal.classList.remove('hidden');\n  });\n  infoIcon.addEventListener('click', function () {\n    dataModal.classList.remove('hidden');\n  });\n\n  // closes instructions modal upon clicking anywhere\n  window.addEventListener('click', function (event) {\n    if (event.target == userModal) {\n      userModal.classList.add('hidden');\n    }\n    if (event.target == dataModal) {\n      dataModal.classList.add('hidden');\n    }\n  });\n  (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table27.csv\", \"NSDUH_percentages/table27.csv\", ANY_ILLNESS);\n  document.getElementById(\"table27\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Any Mental Illness in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table27.csv\", \"NSDUH_percentages/table27.csv\", ANY_ILLNESS);\n  });\n  document.getElementById(\"table28\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Serious Mental Illness in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table28.csv\", \"NSDUH_percentages/table28.csv\", SRS_ILLNESS);\n  });\n  document.getElementById(\"table29\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Received Mental Health Services in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table29.csv\", \"NSDUH_percentages/table29.csv\", RECEIVED_SERV);\n  });\n  document.getElementById(\"table30\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Major Depressive Episode in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table30.csv\", \"NSDUH_percentages/table30.csv\", DEPRESSION);\n  });\n  document.getElementById(\"table31\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Had Serious Thoughts of Suicide in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table31.csv\", \"NSDUH_percentages/table31.csv\", THOUGHTS);\n  });\n  document.getElementById(\"table32\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Made Any Suicide Plans in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table32.csv\", \"NSDUH_percentages/table32.csv\", PLANS);\n  });\n  document.getElementById(\"table33\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Attempted Suicide in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table33.csv\", \"NSDUH_percentages/table33.csv\", ATTEMPTED);\n  });\n  document.getElementById(\"table7\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Cocaine Use in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table7.csv\", \"NSDUH_percentages/table7.csv\", COCAINE);\n  });\n  document.getElementById(\"table11\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Methamphetamine Use in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table11.csv\", \"NSDUH_percentages/table11.csv\", METH);\n  });\n  document.getElementById(\"table12\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Pain Reliever Misuse in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table12.csv\", \"NSDUH_percentages/table12.csv\", PAIN_RELIEF);\n  });\n  document.getElementById(\"table22\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Alcohol Use Disorder in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table22.csv\", \"NSDUH_percentages/table22.csv\", ALCOHOL);\n  });\n  document.getElementById(\"table2\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Marijuana Use in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table2.csv\", \"NSDUH_percentages/table2.csv\", WEED_USE);\n  });\n  document.getElementById(\"table23\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Substance Use Disorder in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table23.csv\", \"NSDUH_percentages/table23.csv\", SUBSTANCE_USE);\n  });\n  document.getElementById(\"table26\").addEventListener(\"click\", () => {\n    countContainer.innerHTML = '';\n    centContainer.innerHTML = '';\n    stateDetails.classList.add('hidden');\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    document.querySelector(\".legend\").innerHTML = \"\";\n    document.querySelector(\"h2\").innerHTML = \"Needing But Not Receiving Treatment at a Specialty Facility for Substance Use in the Past Year\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table26.csv\", \"NSDUH_percentages/table26.csv\", NOT_RECEIVING);\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/data_parsers.js":
/*!*************************************!*\
  !*** ./src/scripts/data_parsers.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"calculateSD\": function() { return /* binding */ calculateSD; },\n/* harmony export */   \"parse\": function() { return /* binding */ parse; }\n/* harmony export */ });\nfunction calculateSD(arr) {\n  const length = arr.length;\n  const avg = arr.reduce((x, y) => x + y) / length;\n  const deviations = arr.map(n => n - avg);\n  const squareDevs = deviations.map(n => Math.pow(n, 2));\n  const variance = squareDevs.reduce((x, y) => x + y) / length;\n  return Math.sqrt(variance);\n}\n\n// removes commas from a stringified number\nfunction parse(numString) {\n  if (numString.includes(',')) {\n    return parseInt(numString.replace(/,/g, ''));\n  } else {\n    return parseInt(numString);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9kYXRhX3BhcnNlcnMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxTQUFTQSxXQUFXQSxDQUFDQyxHQUFHLEVBQUU7RUFDL0IsTUFBTUMsTUFBTSxHQUFHRCxHQUFHLENBQUNDLE1BQU07RUFDekIsTUFBTUMsR0FBRyxHQUFHRixHQUFHLENBQUNHLE1BQU0sQ0FBQyxDQUFDQyxDQUFDLEVBQUVDLENBQUMsS0FBS0QsQ0FBQyxHQUFHQyxDQUFDLENBQUMsR0FBR0osTUFBTTtFQUNoRCxNQUFNSyxVQUFVLEdBQUdOLEdBQUcsQ0FBQ08sR0FBRyxDQUFDQyxDQUFDLElBQUlBLENBQUMsR0FBR04sR0FBRyxDQUFDO0VBQ3hDLE1BQU1PLFVBQVUsR0FBR0gsVUFBVSxDQUFDQyxHQUFHLENBQUNDLENBQUMsSUFBSUUsSUFBSSxDQUFDQyxHQUFHLENBQUNILENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztFQUN0RCxNQUFNSSxRQUFRLEdBQUdILFVBQVUsQ0FBQ04sTUFBTSxDQUFDLENBQUNDLENBQUMsRUFBRUMsQ0FBQyxLQUFLRCxDQUFDLEdBQUdDLENBQUMsQ0FBQyxHQUFHSixNQUFNO0VBQzVELE9BQU9TLElBQUksQ0FBQ0csSUFBSSxDQUFDRCxRQUFRLENBQUM7QUFDNUI7O0FBR0E7QUFDTyxTQUFTRSxLQUFLQSxDQUFDQyxTQUFTLEVBQUU7RUFDL0IsSUFBSUEsU0FBUyxDQUFDQyxRQUFRLENBQUMsR0FBRyxDQUFDLEVBQUU7SUFDM0IsT0FBT0MsUUFBUSxDQUFDRixTQUFTLENBQUNHLE9BQU8sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7RUFDOUMsQ0FBQyxNQUFNO0lBQ0wsT0FBT0QsUUFBUSxDQUFDRixTQUFTLENBQUM7RUFDNUI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YXRlX3N0YXRzLy4vc3JjL3NjcmlwdHMvZGF0YV9wYXJzZXJzLmpzPzlmMTgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGNhbGN1bGF0ZVNEKGFycikge1xuICBjb25zdCBsZW5ndGggPSBhcnIubGVuZ3RoO1xuICBjb25zdCBhdmcgPSBhcnIucmVkdWNlKCh4LCB5KSA9PiB4ICsgeSkgLyBsZW5ndGg7XG4gIGNvbnN0IGRldmlhdGlvbnMgPSBhcnIubWFwKG4gPT4gbiAtIGF2Zyk7XG4gIGNvbnN0IHNxdWFyZURldnMgPSBkZXZpYXRpb25zLm1hcChuID0+IE1hdGgucG93KG4sIDIpKTtcbiAgY29uc3QgdmFyaWFuY2UgPSBzcXVhcmVEZXZzLnJlZHVjZSgoeCwgeSkgPT4geCArIHkpIC8gbGVuZ3RoO1xuICByZXR1cm4gTWF0aC5zcXJ0KHZhcmlhbmNlKTtcbn1cblxuXG4vLyByZW1vdmVzIGNvbW1hcyBmcm9tIGEgc3RyaW5naWZpZWQgbnVtYmVyXG5leHBvcnQgZnVuY3Rpb24gcGFyc2UobnVtU3RyaW5nKSB7XG4gIGlmIChudW1TdHJpbmcuaW5jbHVkZXMoJywnKSkge1xuICAgIHJldHVybiBwYXJzZUludChudW1TdHJpbmcucmVwbGFjZSgvLC9nLCAnJykpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBwYXJzZUludChudW1TdHJpbmcpO1xuICB9XG59XG4iXSwibmFtZXMiOlsiY2FsY3VsYXRlU0QiLCJhcnIiLCJsZW5ndGgiLCJhdmciLCJyZWR1Y2UiLCJ4IiwieSIsImRldmlhdGlvbnMiLCJtYXAiLCJuIiwic3F1YXJlRGV2cyIsIk1hdGgiLCJwb3ciLCJ2YXJpYW5jZSIsInNxcnQiLCJwYXJzZSIsIm51bVN0cmluZyIsImluY2x1ZGVzIiwicGFyc2VJbnQiLCJyZXBsYWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/data_parsers.js\n");

/***/ }),

/***/ "./src/scripts/legend.js":
/*!*******************************!*\
  !*** ./src/scripts/legend.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createLegend\": function() { return /* binding */ createLegend; }\n/* harmony export */ });\nfunction createLegend(colors) {\n  const deviationText = [\"Two or More Standard Deviations (SD) Below National Average (NA)\", \"Between Two and One SD Below NA\", \"Between One SD Below NA and NA\", \"Between One SD Above NA and NA\", \"Between One and Two SD Above NA\", \"Two more More SD Above NA\"];\n\n  // create color legend\n  const legend = d3.select('.legend');\n  let yAxis = 65;\n\n  // iterate through colors to create colored rectangle + associated text description\n  colors.forEach(function (color, idx) {\n    legend.append('rect').attr('x', '0').attr('y', `${yAxis}`).attr('width', '20').attr('height', '80').attr('fill', `${color}`).attr('id', `color-${idx}`).attr('idx', idx).attr('data-text', `${deviationText[idx]}`);\n    d3.select(`#color-${idx}`).append('text').attr('x', '23').attr('y', `${yAxis}`).attr('width', '200').attr('height', '80').text(`${deviationText[idx]}`);\n    d3.select(`#color-${idx}`).on('mouseover', e => {\n      const el = e.target;\n      const detail = el.dataset.text;\n      const idx = Number(el.getAttribute('idx'));\n      const legendDetail = document.getElementById(\"legend-detail\");\n      const offsetLeft = document.querySelector('.map-container').offsetLeft;\n      const offsetTop = document.querySelector('.map-container').offsetTop;\n      const legendWidth = document.querySelector('.legend').width.baseVal.value;\n      legendDetail.innerText = detail;\n      legendDetail.style.display = \"block\";\n      legendDetail.style.left = `${offsetLeft + legendWidth - 1}px`;\n      legendDetail.style.top = `${offsetTop + 65 + 80 * idx}px`;\n      legendDetail.style.backgroundColor = color;\n      if (idx >= 0 && idx <= 1 || idx >= 4 && idx <= 5) {\n        legendDetail.style.color = 'white';\n      } else {\n        legendDetail.style.color = 'black';\n      }\n    }).on('mouseout', () => {\n      const legendDetail = document.getElementById(\"legend-detail\");\n      legendDetail.style.display = 'none';\n    });\n    yAxis += 80;\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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WUFBWSxDQUFDVyxLQUFLLENBQUNJLGVBQWUsR0FBRzVCLEtBQUs7TUFFMUMsSUFBSUMsR0FBRyxJQUFJLENBQUMsSUFBSUEsR0FBRyxJQUFJLENBQUMsSUFBSUEsR0FBRyxJQUFJLENBQUMsSUFBSUEsR0FBRyxJQUFJLENBQUMsRUFBRTtRQUNoRFksWUFBWSxDQUFDVyxLQUFLLENBQUN4QixLQUFLLEdBQUcsT0FBTztNQUNwQyxDQUFDLE1BQU07UUFDTGEsWUFBWSxDQUFDVyxLQUFLLENBQUN4QixLQUFLLEdBQUcsT0FBTztNQUNwQztJQUNGLENBQUMsQ0FBQyxDQUNESyxFQUFFLENBQUMsVUFBVSxFQUFFLE1BQU07TUFDcEIsTUFBTVEsWUFBWSxHQUFHQyxRQUFRLENBQUNDLGNBQWMsQ0FBQyxlQUFlLENBQUM7TUFDN0RGLFlBQVksQ0FBQ1csS0FBSyxDQUFDQyxPQUFPLEdBQUcsTUFBTTtJQUNyQyxDQUFDLENBQUM7SUFHSjNCLEtBQUssSUFBSSxFQUFFO0VBQ2IsQ0FBQyxDQUFDO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGF0ZV9zdGF0cy8uL3NyYy9zY3JpcHRzL2xlZ2VuZC5qcz8xZWE3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBjcmVhdGVMZWdlbmQoY29sb3JzKSB7XG4gIGNvbnN0IGRldmlhdGlvblRleHQgPSBbXG4gICAgXCJUd28gb3IgTW9yZSBTdGFuZGFyZCBEZXZpYXRpb25zIChTRCkgQmVsb3cgTmF0aW9uYWwgQXZlcmFnZSAoTkEpXCIsXG4gICAgXCJCZXR3ZWVuIFR3byBhbmQgT25lIFNEIEJlbG93IE5BXCIsXG4gICAgXCJCZXR3ZWVuIE9uZSBTRCBCZWxvdyBOQSBhbmQgTkFcIixcbiAgICBcIkJldHdlZW4gT25lIFNEIEFib3ZlIE5BIGFuZCBOQVwiLFxuICAgIFwiQmV0d2VlbiBPbmUgYW5kIFR3byBTRCBBYm92ZSBOQVwiLFxuICAgIFwiVHdvIG1vcmUgTW9yZSBTRCBBYm92ZSBOQVwiXG4gIF1cblxuICAvLyBjcmVhdGUgY29sb3IgbGVnZW5kXG4gIGNvbnN0IGxlZ2VuZCA9IGQzLnNlbGVjdCgnLmxlZ2VuZCcpO1xuICBsZXQgeUF4aXMgPSA2NTtcblxuICAvLyBpdGVyYXRlIHRocm91Z2ggY29sb3JzIHRvIGNyZWF0ZSBjb2xvcmVkIHJlY3RhbmdsZSArIGFzc29jaWF0ZWQgdGV4dCBkZXNjcmlwdGlvblxuICBjb2xvcnMuZm9yRWFjaChmdW5jdGlvbihjb2xvciwgaWR4KSB7XG4gICAgbGVnZW5kLmFwcGVuZCgncmVjdCcpXG4gICAgICAuYXR0cigneCcsICcwJylcbiAgICAgIC5hdHRyKCd5JywgYCR7eUF4aXN9YClcbiAgICAgIC5hdHRyKCd3aWR0aCcsICcyMCcpXG4gICAgICAuYXR0cignaGVpZ2h0JywgJzgwJylcbiAgICAgIC5hdHRyKCdmaWxsJywgYCR7Y29sb3J9YClcbiAgICAgIC5hdHRyKCdpZCcsIGBjb2xvci0ke2lkeH1gKVxuICAgICAgLmF0dHIoJ2lkeCcsIGlkeClcbiAgICAgIC5hdHRyKCdkYXRhLXRleHQnLCBgJHtkZXZpYXRpb25UZXh0W2lkeF19YClcblxuICAgIGQzLnNlbGVjdChgI2NvbG9yLSR7aWR4fWApXG4gICAgICAuYXBwZW5kKCd0ZXh0JylcbiAgICAgIC5hdHRyKCd4JywgJzIzJylcbiAgICAgIC5hdHRyKCd5JywgYCR7eUF4aXN9YClcbiAgICAgIC5hdHRyKCd3aWR0aCcsICcyMDAnKVxuICAgICAgLmF0dHIoJ2hlaWdodCcsICc4MCcpXG4gICAgICAudGV4dChgJHtkZXZpYXRpb25UZXh0W2lkeF19YClcblxuICAgIGQzLnNlbGVjdChgI2NvbG9yLSR7aWR4fWApXG4gICAgICAub24oJ21vdXNlb3ZlcicsIChlKSA9PiB7XG4gICAgICAgIGNvbnN0IGVsID0gZS50YXJnZXQ7XG4gICAgICAgIGNvbnN0IGRldGFpbCA9IGVsLmRhdGFzZXQudGV4dDtcbiAgICAgICAgY29uc3QgaWR4ID0gTnVtYmVyKGVsLmdldEF0dHJpYnV0ZSgnaWR4JykpO1xuICAgICAgICBjb25zdCBsZWdlbmREZXRhaWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxlZ2VuZC1kZXRhaWxcIik7XG4gICAgICAgIGNvbnN0IG9mZnNldExlZnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWFwLWNvbnRhaW5lcicpLm9mZnNldExlZnQ7XG4gICAgICAgIGNvbnN0IG9mZnNldFRvcCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tYXAtY29udGFpbmVyJykub2Zmc2V0VG9wO1xuICAgICAgICBjb25zdCBsZWdlbmRXaWR0aCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5sZWdlbmQnKS53aWR0aC5iYXNlVmFsLnZhbHVlO1xuICAgICAgICBcbiAgICAgICAgbGVnZW5kRGV0YWlsLmlubmVyVGV4dCA9IGRldGFpbDtcbiAgICAgICAgbGVnZW5kRGV0YWlsLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICAgIGxlZ2VuZERldGFpbC5zdHlsZS5sZWZ0ID0gYCR7b2Zmc2V0TGVmdCArIGxlZ2VuZFdpZHRoIC0gMX1weGA7XG4gICAgICAgIGxlZ2VuZERldGFpbC5zdHlsZS50b3AgPSBgJHtvZmZzZXRUb3AgKyA2NSArICg4MCAqIGlkeCl9cHhgO1xuICAgICAgICBsZWdlbmREZXRhaWwuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gY29sb3I7XG5cbiAgICAgICAgaWYgKGlkeCA+PSAwICYmIGlkeCA8PSAxIHx8IGlkeCA+PSA0ICYmIGlkeCA8PSA1KSB7XG4gICAgICAgICAgbGVnZW5kRGV0YWlsLnN0eWxlLmNvbG9yID0gJ3doaXRlJztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBsZWdlbmREZXRhaWwuc3R5bGUuY29sb3IgPSAnYmxhY2snO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLm9uKCdtb3VzZW91dCcsICgpID0+IHtcbiAgICAgICAgY29uc3QgbGVnZW5kRGV0YWlsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsZWdlbmQtZGV0YWlsXCIpO1xuICAgICAgICBsZWdlbmREZXRhaWwuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgIH0pO1xuXG5cbiAgICB5QXhpcyArPSA4MDtcbiAgfSk7XG59Il0sIm5hbWVzIjpbImNyZWF0ZUxlZ2VuZCIsImNvbG9ycyIsImRldmlhdGlvblRleHQiLCJsZWdlbmQiLCJkMyIsInNlbGVjdCIsInlBeGlzIiwiZm9yRWFjaCIsImNvbG9yIiwiaWR4IiwiYXBwZW5kIiwiYXR0ciIsInRleHQiLCJvbiIsImUiLCJlbCIsInRhcmdldCIsImRldGFpbCIsImRhdGFzZXQiLCJOdW1iZXIiLCJnZXRBdHRyaWJ1dGUiLCJsZWdlbmREZXRhaWwiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwib2Zmc2V0TGVmdCIsInF1ZXJ5U2VsZWN0b3IiLCJvZmZzZXRUb3AiLCJsZWdlbmRXaWR0aCIsIndpZHRoIiwiYmFzZVZhbCIsInZhbHVlIiwiaW5uZXJUZXh0Iiwic3R5bGUiLCJkaXNwbGF5IiwibGVmdCIsInRvcCIsImJhY2tncm91bmRDb2xvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/legend.js\n");

/***/ }),
/***/ "./src/scripts/map.js":
/*!****************************!*\
  !*** ./src/scripts/map.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fetchAndRender\": function() { return /* binding */ fetchAndRender; }\n/* harmony export */ });\n/* harmony import */ var _data_parsers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data_parsers */ \"./src/scripts/data_parsers.js\");\n/* harmony import */ var _legend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./legend */ \"./src/scripts/legend.js\");\n\n\nfunction fetchAndRender(url1, url2, colors) {\n  const deviationText = [\"Two or More Standard Deviations (SD) Below National Average (NA)\", \"Between Two and One SD Below NA\", \"Between One SD Below NA and NA\", \"Between One SD Above NA and NA\", \"Between One and Two SD Above NA\", \"Two more More SD Above NA\"];\n  let mapData;\n  let countData;\n  let centData;\n  d3.json(\"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\").then(data => {\n    mapData = data;\n    d3.csv(url1).then(data => {\n      countData = data.map(function (state) {\n        return {\n          \"State\": state[\"State\"],\n          \"12-17 Estimate\": state[\"12-17 Estimate\"],\n          \"18-25 Estimate\": state[\"18-25 Estimate\"],\n          \"12 or Older Estimate\": state[\"12 or Older Estimate\"],\n          \"18 or Older Estimate\": state[\"18 or Older Estimate\"],\n          \"26 or Older Estimate\": state[\"26 or Older Estimate\"]\n        };\n      });\n      renderMap();\n    });\n  });\n  function renderMap() {\n    const width = 950;\n    const height = 520;\n    const path = d3.geoPath(d3.geoAlbersUsa());\n    const svg = d3.select('.us-map').attr('viewBox', [0, 0, width, height]).on(\"click\", reset);\n    const g = svg.append('g');\n\n    // defines how much to zoom in (initialized here to allow access in later callbacks)\n    const zoom = d3.zoom().scaleExtent([1, 8]).on(\"zoom\", zoomed);\n\n    /* uses 'mapData' to create geometric shapes for states\n      applies fill color based on selected data\n      applies 'clicked' callback function to zoom in on selected state\n    */\n    const states = g.append('g').attr('cursor', 'pointer').selectAll('path').data(topojson.feature(mapData, mapData.objects.states).features).enter().append('path').attr('d', path).attr('fill', state => {\n      let stateName = state.properties.name;\n      let stateData = countData.find(ele => {\n        return ele[\"State\"] === stateName;\n      });\n      const nationalAvg = d3.mean(countData.slice(6), ele => (0,_data_parsers__WEBPACK_IMPORTED_MODULE_0__.parse)(ele[\"18 or Older Estimate\"]));\n      const standardDev = (0,_data_parsers__WEBPACK_IMPORTED_MODULE_0__.calculateSD)(d3.map(countData.slice(6), d => (0,_data_parsers__WEBPACK_IMPORTED_MODULE_0__.parse)(d['18 or Older Estimate'])));\n\n      // geographical data and statistical data do not align, this handles instances where no state match is found\n      stateData ||= {\n        \"18 or Older Estimate\": `${nationalAvg}`\n      };\n      const stateAvg = (0,_data_parsers__WEBPACK_IMPORTED_MODULE_0__.parse)(stateData[\"18 or Older Estimate\"]);\n      const minusTwoSD = nationalAvg - 2 * standardDev;\n      const minusOneSD = nationalAvg - 1 * standardDev;\n      const plusOneSD = nationalAvg + 1 * standardDev;\n      const plusTwoSD = nationalAvg + 2 * standardDev;\n      if (stateAvg <= minusTwoSD) {\n        return colors[0];\n      } else if (stateAvg > minusTwoSD && stateAvg <= minusOneSD) {\n        return colors[1];\n      } else if (stateAvg > minusOneSD && stateAvg <= nationalAvg) {\n        return colors[2];\n      } else if (stateAvg > nationalAvg && stateAvg <= plusOneSD) {\n        return colors[3];\n      } else if (stateAvg > plusOneSD && stateAvg <= plusTwoSD) {\n        return colors[4];\n      } else {\n        return colors[5];\n      }\n    }).join('path').on('click', makeModal).attr('d', path);\n\n    // add HTML title element to each state (displays upon hovering)\n    states.append('title').text(state => state.properties.name);\n\n    // adds white state borders\n    g.append('path').attr('fill', 'none').attr('stroke', 'white').attr('stroke-linejoin', 'round').attr('d', path(topojson.mesh(mapData, mapData.objects.states, (a, b) => a !== b)));\n\n    // make a color legend for the map\n    (0,_legend__WEBPACK_IMPORTED_MODULE_1__.createLegend)(colors);\n\n    // zoom in on state when clicked\n    function clicked(event, d) {\n      const [[x0, y0], [x1, y1]] = path.bounds(d);\n      event.stopPropagation();\n      states.transition().style(\"fill\", null);\n      svg.transition().duration(750).call(zoom.transform, d3.zoomIdentity.translate(width / 2, height / 2).scale(Math.min(8, 0.9 / Math.max((x1 - x0) / width, (y1 - y0) / height))).translate(-(x0 + x1) / 2, -(y0 + y1) / 2), d3.pointer(event, svg.node()));\n    }\n    ;\n    function zoomed(event) {\n      const {\n        transform\n      } = event;\n      g.attr(\"transform\", transform);\n      g.attr(\"stroke-width\", 1 / transform.k);\n    }\n    ;\n\n    // resets view back to default sizing/position\n    function reset() {\n      const countContainer = document.getElementById('count-details');\n      const centContainer = document.getElementById('percent-details');\n      const stateDetails = document.getElementById('state-details');\n      countContainer.innerHTML = '';\n      centContainer.innerHTML = '';\n      stateDetails.classList.add('hidden');\n      states.transition().style(\"fill\", null);\n      svg.transition().duration(750).call(zoom.transform, d3.zoomIdentity, d3.zoomTransform(svg.node()).invert([width / 2, height / 2]));\n    }\n    ;\n\n    // makes modal with details for selected state\n    function makeModal(event, state) {\n      event.stopPropagation();\n      const stateDetails = document.getElementById('state-details');\n      const countContainer = document.getElementById('count-details');\n      const centContainer = document.getElementById('percent-details');\n      countContainer.innerHTML = '';\n      centContainer.innerHTML = '';\n      let stateName = state.properties.name;\n      let stateCount = countData.find(ele => {\n        return ele[\"State\"] === stateName;\n      });\n      d3.csv(url2).then(data => {\n        centData = data.map(function (state) {\n          return {\n            \"State\": state[\"State\"],\n            \"12-17 Estimate\": state[\"12-17 Estimate\"],\n            \"18-25 Estimate\": state[\"18-25 Estimate\"],\n            \"12 or Older Estimate\": state[\"12 or Older Estimate\"],\n            \"18 or Older Estimate\": state[\"18 or Older Estimate\"],\n            \"26 or Older Estimate\": state[\"26 or Older Estimate\"]\n          };\n        });\n        let stateCent = centData.find(ele => {\n          return ele[\"State\"] === stateName;\n        });\n        const countHeader = document.createElement('li');\n        countHeader.innerHTML = `Raw count estimations (by age) for ${stateName}:`;\n        countContainer.appendChild(countHeader);\n        const centHeader = document.createElement('li');\n        centHeader.innerHTML = `Percentage estimations (by age) for ${stateName}:`;\n        centContainer.appendChild(centHeader);\n        Object.entries(stateCount).slice(1).forEach(function (pair) {\n          if (pair[1]) {\n            const countPair = document.createElement('li');\n            countPair.innerHTML = `${pair[0]}: ${(0,_data_parsers__WEBPACK_IMPORTED_MODULE_0__.parse)(pair[1]) * 1000} people`;\n            countContainer.appendChild(countPair);\n          }\n        });\n        Object.entries(stateCent).slice(1).forEach(function (pair) {\n          if (pair[1]) {\n            const centPair = document.createElement('li');\n            centPair.innerHTML = `${pair[0]}: ${pair[1]}`;\n            centContainer.appendChild(centPair);\n          }\n        });\n      });\n      stateDetails.classList.remove('hidden');\n      stateDetails.setAttribute('z-index', '5');\n      clicked(event, state);\n    }\n\n    // enables click-dragging the map around inside SVG element\n    svg.call(zoom);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/map.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGF0ZV9zdGF0cy8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;