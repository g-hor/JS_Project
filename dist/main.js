/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/map.js */ \"./src/scripts/map.js\");\n// import Example from \"./scripts/example.js\"; // syntax to import our class file\n// import { renderMap } from \"./scripts/map.js\";\n// import { calculate } from \"./scripts/calculation.js\";\n\nconst ANY_ILLNESS = [\"#66ffff\", \"#99ff99\", \"#ffff99\", \"#ff9999\", \"#ff99ff\", \"#99ccff\"];\nconst DEPRESSION = [\"#ccccff\", \"#99ccff\", \"#6699ff\", \"#3366ff\", \"#3333ff\", \"#000066\"];\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_count/table27.csv\", ANY_ILLNESS);\n  document.getElementById(\"btn\").addEventListener(\"click\", () => {\n    document.querySelector(\".us-map\").innerHTML = \"\";\n    (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRender)(\"NSDUH_percentages/table30.csv\", DEPRESSION);\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0E7QUFDa0Q7QUFFbEQsTUFBTUMsV0FBVyxHQUFHLENBQUMsU0FBUyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxTQUFTLENBQUM7QUFDdEYsTUFBTUMsVUFBVSxHQUFHLENBQUMsU0FBUyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxTQUFTLENBQUM7QUFFckZDLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsTUFBTTtFQUVsREosK0RBQWMsQ0FBQyx5QkFBeUIsRUFBRUMsV0FBVyxDQUFDO0VBQ3RERSxRQUFRLENBQUNFLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQ0QsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLE1BQU07SUFDN0RELFFBQVEsQ0FBQ0csYUFBYSxDQUFDLFNBQVMsQ0FBQyxDQUFDQyxTQUFTLEdBQUcsRUFBRTtJQUNoRFAsK0RBQWMsQ0FBQywrQkFBK0IsRUFBRUUsVUFBVSxDQUFDO0VBQzdELENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YXRlX3N0YXRzLy4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IEV4YW1wbGUgZnJvbSBcIi4vc2NyaXB0cy9leGFtcGxlLmpzXCI7IC8vIHN5bnRheCB0byBpbXBvcnQgb3VyIGNsYXNzIGZpbGVcbi8vIGltcG9ydCB7IHJlbmRlck1hcCB9IGZyb20gXCIuL3NjcmlwdHMvbWFwLmpzXCI7XG4vLyBpbXBvcnQgeyBjYWxjdWxhdGUgfSBmcm9tIFwiLi9zY3JpcHRzL2NhbGN1bGF0aW9uLmpzXCI7XG5pbXBvcnQgeyBmZXRjaEFuZFJlbmRlciB9IGZyb20gXCIuL3NjcmlwdHMvbWFwLmpzXCI7XG5cbmNvbnN0IEFOWV9JTExORVNTID0gW1wiIzY2ZmZmZlwiLCBcIiM5OWZmOTlcIiwgXCIjZmZmZjk5XCIsIFwiI2ZmOTk5OVwiLCBcIiNmZjk5ZmZcIiwgXCIjOTljY2ZmXCJdXG5jb25zdCBERVBSRVNTSU9OID0gW1wiI2NjY2NmZlwiLCBcIiM5OWNjZmZcIiwgXCIjNjY5OWZmXCIsIFwiIzMzNjZmZlwiLCBcIiMzMzMzZmZcIiwgXCIjMDAwMDY2XCJdO1xuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCAoKSA9PiB7XG5cbiAgZmV0Y2hBbmRSZW5kZXIoXCJOU0RVSF9jb3VudC90YWJsZTI3LmNzdlwiLCBBTllfSUxMTkVTUyk7XG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi51cy1tYXBcIikuaW5uZXJIVE1MID0gXCJcIjtcbiAgICBmZXRjaEFuZFJlbmRlcihcIk5TRFVIX3BlcmNlbnRhZ2VzL3RhYmxlMzAuY3N2XCIsIERFUFJFU1NJT04pO1xuICB9KTtcbn0pIl0sIm5hbWVzIjpbImZldGNoQW5kUmVuZGVyIiwiQU5ZX0lMTE5FU1MiLCJERVBSRVNTSU9OIiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiZ2V0RWxlbWVudEJ5SWQiLCJxdWVyeVNlbGVjdG9yIiwiaW5uZXJIVE1MIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/map.js":
/*!****************************!*\
  !*** ./src/scripts/map.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fetchAndRender\": function() { return /* binding */ fetchAndRender; }\n/* harmony export */ });\nfunction fetchAndRender(url, colors) {\n  const percentageText = [\"Below 90% of National Average\", \"Between 90% and 95% of National Average\", \"Between 95% and 100% of National Average\", \"Between 100% and 105% of National Average\", \"Between 105% and 110% of National Average\", \"Over 110% of National Average\"];\n  let mapData;\n  let csvData;\n  d3.json(\"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\").then(data => {\n    mapData = data;\n    // console.log(mapData);\n\n    d3.csv(url).then(data => {\n      csvData = data;\n      // console.log(csvData);\n      debugger;\n      renderMap();\n    });\n  });\n  function renderMap() {\n    const nationalData = csvData[0];\n    console.log(nationalData);\n    const nationalAvg = parseFloat(nationalData[\"18 or Older Estimate\"]);\n    const width = 950;\n    const height = 520;\n    const path = d3.geoPath(d3.geoAlbersUsa());\n    const svg = d3.select('.us-map').attr('viewBox', [0, 0, width, height]).on(\"click\", reset);\n    const g = svg.append('g');\n\n    // defines how much to zoom in (initialized here to allow access in later callbacks)\n    const zoom = d3.zoom().scaleExtent([1, 8]).on(\"zoom\", zoomed);\n\n    /* uses 'mapData' to create geometric shapes for states\n      applies fill color based on selected data\n      applies 'clicked' callback function to zoom in on selected state\n    */\n    const states = g.append('g').attr('cursor', 'pointer').selectAll('path').data(topojson.feature(mapData, mapData.objects.states).features).enter().append('path').attr('d', path).attr('fill', state => {\n      let stateName = state.properties.name;\n      let stateData = csvData.find(ele => {\n        return ele[\"State\"] === stateName;\n      });\n      stateData ||= {\n        \"12-17 Estimate\": \"0\",\n        \"18-25 Estimate\": \"0\",\n        \"18 or Older Estimate\": \"0\"\n      };\n      let stateAvg = parseFloat(stateData[\"18 or Older Estimate\"]);\n      let difference = nationalAvg - stateAvg;\n      if (difference <= -3) {\n        return colors[0];\n      } else if (difference > -3 && difference <= -1.5) {\n        return colors[1];\n      } else if (difference > -1.5 && difference <= 0) {\n        return colors[2];\n      } else if (difference > 0 && difference <= 1.5) {\n        return colors[3];\n      } else if (difference > 1.5 && difference <= 3) {\n        return colors[4];\n      } else {\n        return colors[5];\n      }\n    }).join('path').on('click', clicked).attr('d', path);\n\n    // add HTML title element to each state (displays upon hovering)\n    states.append('title').text(state => state.properties.name);\n\n    // adds white state borders\n    g.append('path').attr('fill', 'none').attr('stroke', 'white').attr('stroke-linejoin', 'round').attr('d', path(topojson.mesh(mapData, mapData.objects.states, (a, b) => a !== b)));\n\n    // create color legend\n    const legend = d3.select('.legend');\n    let yAxis = 0;\n    colors.forEach(function (color, idx) {\n      let portion = legend.append('g').attr('class', 'portion');\n      portion.append('rect').attr('x', '10').attr('y', `${yAxis}`).attr('width', '40').attr('height', '15').attr('fill', `${color}`);\n      portion.append('text').attr('x', '100').attr('y', `${yAxis + 15}`).attr('fill', 'black').text(`${percentageText[idx]}`);\n      yAxis += 15;\n    });\n\n    // zoom in on state when clicked\n    function clicked(event, d) {\n      const [[x0, y0], [x1, y1]] = path.bounds(d);\n      event.stopPropagation();\n      states.transition().style(\"fill\", null);\n      svg.transition().duration(750).call(zoom.transform, d3.zoomIdentity.translate(width / 2, height / 2).scale(Math.min(8, 0.9 / Math.max((x1 - x0) / width, (y1 - y0) / height))).translate(-(x0 + x1) / 2, -(y0 + y1) / 2), d3.pointer(event, svg.node()));\n    }\n    function zoomed(event) {\n      const {\n        transform\n      } = event;\n      g.attr(\"transform\", transform);\n      g.attr(\"stroke-width\", 1 / transform.k);\n    }\n\n    // resets view back to default sizing/position\n    function reset() {\n      states.transition().style(\"fill\", null);\n      svg.transition().duration(750).call(zoom.transform, d3.zoomIdentity, d3.zoomTransform(svg.node()).invert([width / 2, height / 2]));\n    }\n\n    // removes commas from a stringified number\n    function parse(numString) {\n      if (numString.includes(',')) {\n        return parseInt(numString.replace(/,/g, ''));\n      } else {\n        return parseInt(numString);\n      }\n    }\n\n    // enables click-dragging the map around inside SVG element\n    svg.call(zoom);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/map.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGF0ZV9zdGF0cy8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;